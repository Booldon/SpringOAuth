# MySQL setting
spring.datasource.driver-class-name=com.mysql.cj.jdc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/oauthJWT?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.username=booldon
spring.datasource.password=Booldon9409!

# JPA setting
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# jwt setting
spring.jwt.secret=HFsNtMC5F3fdKRIvDdwT0sBxNMRQoPeaeabLzxZDi6ccXInoFcTgVwpqeeirxXtc

# log setting
logging.level.org.springframework.security=TRACE

#registration
spring.security.oauth2.client.registration.naver.client-name=naver
spring.security.oauth2.client.registration.naver.client-id=R4ZOcHSPdd4GkuRCPGTU
spring.security.oauth2.client.registration.naver.client-secret=fPs_qSJ_XW
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email

#provider
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

#registration
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.client-id=192726136583-0q3ceknad2i2l9tdmljp8al6866rd56f.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.scope=profile,email